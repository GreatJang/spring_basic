#application properties? ??
#server.port=8081
#spring.datasource.url=jdbc:mariadb://localhost:3306/member
#spring.datasource.username=root
#spring.datasource.password=1234

#server:
#  port: 8081
#
#spring:
#  profiles:
#    active: dev
#  datasource:
#    url: jdbc:mariadb://localhost:3306/member
#    username: root
#    password: 1234
#
#
#server:
#  port: 8082
#
spring:
##  Controller와 jsp사용시에 경로와 확장자 설정
##  기본설정이 타임리프이므로, 타임리프 의존성 제거해야 jsp 사용가능
#  mvc:
#    view:
#      prefix: /WEB-INF/views
#      suffix: .jsp

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver #기술의 근간이기 때문에 jdbc.Driver사용
    url: jdbc:mariadb://localhost:3306/basic
    username: root
    password: 1234

  jpa:
    database: mysql #mariadb는 동작 잘 안된다.
#    innoDB 엔진사용 설정
    database-platform: org.hibernate.dialect.MariaDBDialect #hibernate : jpa의 주요 기술(구현체)
#    스키마는 사전생성 필요
    generate-ddl: true # 엔티티를 기준으로 테이블은 자동생성.
    hibernate:
#      create옵션은 매번 table을 drop후 생성(서버를 껏다가 킬때마다)
#      update옵션은 변경사항만 alter를 적용 / 컬럼길이변경X, 컬럼추가반영 -> raw DDL문으로 DB 변경해야함.
#      validate는 실제DB와의 차이만을 check
#      실무에서는 update 또는 validate 사용 # 실무에서는 절대 create로 하면안된다.
      ddl-auto: update
#      jpa가 자동으로 쿼리를 실행할때, 쿼리가 console창에 보여지도록
    show-sql: true

#mybatis mapper파일 위치 설정
mybatis:
  mapper-locations: classpath:/mapper/**/*.xml
